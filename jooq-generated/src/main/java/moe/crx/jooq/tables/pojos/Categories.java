/*
 * This file is generated by jOOQ.
 */
package moe.crx.jooq.tables.pojos;


import java.io.Serializable;
import java.util.Arrays;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Categories implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Long id;
    private final String name;
    private final Long[] boards;
    private final Boolean visible;

    public Categories(Categories value) {
        this.id = value.id;
        this.name = value.name;
        this.boards = value.boards;
        this.visible = value.visible;
    }

    public Categories(
        Long id,
        String name,
        Long[] boards,
        Boolean visible
    ) {
        this.id = id;
        this.name = name;
        this.boards = boards;
        this.visible = visible;
    }

    /**
     * Getter for <code>public.categories.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Getter for <code>public.categories.name</code>.
     */
    public String getName() {
        return this.name;
    }

    /**
     * Getter for <code>public.categories.boards</code>.
     */
    public Long[] getBoards() {
        return this.boards;
    }

    /**
     * Getter for <code>public.categories.visible</code>.
     */
    public Boolean getVisible() {
        return this.visible;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Categories other = (Categories) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.name == null) {
            if (other.name != null)
                return false;
        }
        else if (!this.name.equals(other.name))
            return false;
        if (this.boards == null) {
            if (other.boards != null)
                return false;
        }
        else if (!Arrays.equals(this.boards, other.boards))
            return false;
        if (this.visible == null) {
            if (other.visible != null)
                return false;
        }
        else if (!this.visible.equals(other.visible))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.boards == null) ? 0 : Arrays.hashCode(this.boards));
        result = prime * result + ((this.visible == null) ? 0 : this.visible.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Categories (");

        sb.append(id);
        sb.append(", ").append(name);
        sb.append(", ").append(Arrays.toString(boards));
        sb.append(", ").append(visible);

        sb.append(")");
        return sb.toString();
    }
}
