/*
 * This file is generated by jOOQ.
 */
package moe.crx.jooq.tables.records;


import moe.crx.jooq.tables.Images;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ImagesRecord extends UpdatableRecordImpl<ImagesRecord> implements Record8<Long, String, String, String, Integer, Integer, Long, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.images.id</code>.
     */
    public ImagesRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.images.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.images.url</code>.
     */
    public ImagesRecord setUrl(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.images.url</code>.
     */
    public String getUrl() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.images.squaredurl</code>.
     */
    public ImagesRecord setSquaredurl(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.images.squaredurl</code>.
     */
    public String getSquaredurl() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.images.filename</code>.
     */
    public ImagesRecord setFilename(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.images.filename</code>.
     */
    public String getFilename() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.images.width</code>.
     */
    public ImagesRecord setWidth(Integer value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.images.width</code>.
     */
    public Integer getWidth() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>public.images.height</code>.
     */
    public ImagesRecord setHeight(Integer value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.images.height</code>.
     */
    public Integer getHeight() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>public.images.filesize</code>.
     */
    public ImagesRecord setFilesize(Long value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.images.filesize</code>.
     */
    public Long getFilesize() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>public.images.alt</code>.
     */
    public ImagesRecord setAlt(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.images.alt</code>.
     */
    public String getAlt() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, String, String, String, Integer, Integer, Long, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Long, String, String, String, Integer, Integer, Long, String> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Images.IMAGES.ID;
    }

    @Override
    public Field<String> field2() {
        return Images.IMAGES.URL;
    }

    @Override
    public Field<String> field3() {
        return Images.IMAGES.SQUAREDURL;
    }

    @Override
    public Field<String> field4() {
        return Images.IMAGES.FILENAME;
    }

    @Override
    public Field<Integer> field5() {
        return Images.IMAGES.WIDTH;
    }

    @Override
    public Field<Integer> field6() {
        return Images.IMAGES.HEIGHT;
    }

    @Override
    public Field<Long> field7() {
        return Images.IMAGES.FILESIZE;
    }

    @Override
    public Field<String> field8() {
        return Images.IMAGES.ALT;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getUrl();
    }

    @Override
    public String component3() {
        return getSquaredurl();
    }

    @Override
    public String component4() {
        return getFilename();
    }

    @Override
    public Integer component5() {
        return getWidth();
    }

    @Override
    public Integer component6() {
        return getHeight();
    }

    @Override
    public Long component7() {
        return getFilesize();
    }

    @Override
    public String component8() {
        return getAlt();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getUrl();
    }

    @Override
    public String value3() {
        return getSquaredurl();
    }

    @Override
    public String value4() {
        return getFilename();
    }

    @Override
    public Integer value5() {
        return getWidth();
    }

    @Override
    public Integer value6() {
        return getHeight();
    }

    @Override
    public Long value7() {
        return getFilesize();
    }

    @Override
    public String value8() {
        return getAlt();
    }

    @Override
    public ImagesRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public ImagesRecord value2(String value) {
        setUrl(value);
        return this;
    }

    @Override
    public ImagesRecord value3(String value) {
        setSquaredurl(value);
        return this;
    }

    @Override
    public ImagesRecord value4(String value) {
        setFilename(value);
        return this;
    }

    @Override
    public ImagesRecord value5(Integer value) {
        setWidth(value);
        return this;
    }

    @Override
    public ImagesRecord value6(Integer value) {
        setHeight(value);
        return this;
    }

    @Override
    public ImagesRecord value7(Long value) {
        setFilesize(value);
        return this;
    }

    @Override
    public ImagesRecord value8(String value) {
        setAlt(value);
        return this;
    }

    @Override
    public ImagesRecord values(Long value1, String value2, String value3, String value4, Integer value5, Integer value6, Long value7, String value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ImagesRecord
     */
    public ImagesRecord() {
        super(Images.IMAGES);
    }

    /**
     * Create a detached, initialised ImagesRecord
     */
    public ImagesRecord(Long id, String url, String squaredurl, String filename, Integer width, Integer height, Long filesize, String alt) {
        super(Images.IMAGES);

        setId(id);
        setUrl(url);
        setSquaredurl(squaredurl);
        setFilename(filename);
        setWidth(width);
        setHeight(height);
        setFilesize(filesize);
        setAlt(alt);
    }

    /**
     * Create a detached, initialised ImagesRecord
     */
    public ImagesRecord(moe.crx.jooq.tables.pojos.Images value) {
        super(Images.IMAGES);

        if (value != null) {
            setId(value.getId());
            setUrl(value.getUrl());
            setSquaredurl(value.getSquaredurl());
            setFilename(value.getFilename());
            setWidth(value.getWidth());
            setHeight(value.getHeight());
            setFilesize(value.getFilesize());
            setAlt(value.getAlt());
        }
    }
}
